/*
I have a better algorithm, but may not fit with this program. if user pressed move key, let the line moves between x0 and x1, and this range is
the range of block size. So the whole area never changes, always 400*400
*/
class Map {
  ArrayList<PVector> points = new ArrayList<PVector>(); //The pvector for blocks; saving x,y value to draw the grid
  int size;
  PVector offset; // Changed to PVector!!

  
  Map() {
    size = 15; //The size of block 15
    offset = new PVector(0, 0); // now needs to initialize it to (0, 0)
    initializePoints(); //First initialize
  }

  // 
  void initializePoints() {
    points.clear(); // clear all the points generated in the array

    //Calculate which points need to be displayed in the window based on the current offset
   //Make it in 400*400
    for (int x = 0; x < width; x += size) {
      for (int y = 0; y < height; y += size) {
        points.add(new PVector(x, y)); //adds all grid point to array
      }
    }
  }

  // Input value dx, dy to the update parameter of map class
  //Problem: too much lag, I need make it to PVector, to make it comfortable when press 2 keys down
  void update(float dx, float dy) {
   offset.add(dx, dy); //update the moving part
    initializePoints(); //Re-Initialize, to make it keep updating //problem: it can't fill the full screen aftering moved
  }

  //display the whole map
  void display() {
    
    //map color
    background(125);
    
    
    // push the map's display together by inputed value dx,dy
    pushMatrix();
    translate(offset.x, offset.y);
    //drawing set
    stroke(0);
    //draw all the points generated by intialize() and saved by PVector ArrayList
    for (PVector point : points) {
      float startX = point.x + offset.x;
      float startY = point.y + offset.y;

      // ensure inside window only
      if (startX >= -size && startX <= width && startY >= -size && startY <= height) {
        // horizontal
        if (startX + size <= width) {
          line(startX, startY, startX + size, startY);
        }
        // vertical
        if (startY + size <= height) {
          line(startX, startY, startX, startY + size);
        }
      }
    }
    popMatrix();
  }
}
